
const SHA256 = require('crypto-js/sha256')

class Block{

    constructor(index, timestamp, data, precedingHash="") {
        // tracks position of every block
        this.index = index
        // records time of each trnasaction
        this.timestamp = timestamp
        // data about the transaction
        this.data = data
        // hash of the preceding block so we can see if the blockchain is valid
        this.precedingHash = precedingHash
        // own hash that becomes generated by computeHash
        this.hash = this.computeHash();
    }


    // takes the whole input to create a hash
    computeHash() {
        return SHA256(this.index + this.precedingHash + this.timestamp + JSON.stringify(this.data)).toString()
    }

}
class BlockChain{

    constructor() {
        this.chain = [this.startGenisisBlock()]
    }

    startGenisisBlock() {
        return new Block(0,"13/03/2020", "Initial Block in the Chain", "0")
    }

    obtainLastBlock() {
        return this.chain[this.chain.length-1]
    }
    
    addNewBlock(newBlock){
        newBlock.precedingHash = this.obtainLastBlock().hash
        newBlock.hash = newBlock.computeHash()
        this.chain.push(newBlock)
    }


}

let andr3olli = new BlockChain();
andr3olli.addNewBlock(new Block(1, "01/06/2020", {sender: "Iris Ljesnjanin", recipient: "Cosima Mielke", quantity: 50}))
andr3olli.addNewBlock(new Block(2, "01/07/2020", {sender: "Vitaly Friedman", recipient: "Ricardo Gimenes", quantity: 100}))

console.log(JSON.stringify(andr3olli, null, 5))