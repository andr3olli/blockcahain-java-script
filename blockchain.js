
const SHA256 = require('crypto-js/sha256')

class Block{

    constructor(index, timestamp, data, precedingHash="") {
        // tracks position of every block
        this.index = index
        // records time of each trnasaction
        this.timestamp = timestamp
        // data about the transaction
        this.data = data
        // hash of the preceding block so we can see if the blockchain is valid
        this.precedingHash = precedingHash
        // own hash that becomes generated by computeHash
        this.hash = this.computeHash();
    }


    // takes the whole input to create a hash
    computeHash() {
        return SHA256(this.index + this.precedingHash + this.timestamp + JSON.stringify(this.data)).toString()
    }

}
class BlockChain{

    //creats chain with genesis block refers to startGenesisblock
    constructor() {
        this.chain = [this.startGenisisBlock()]
    }

    //creates the genesis block
    startGenisisBlock() {
        return new Block(0,"13/03/2020", "Initial Block in the Chain", "0")
    }

    //gets the latest block of the chain to grab the hash
    obtainLastBlock() {
        return this.chain[this.chain.length-1]
    }
    
    //adds a new block to the chain array. Takes a block object and also
    //asigns it the previous hash and the new hash 
    addNewBlock(newBlock){
        newBlock.precedingHash = this.obtainLastBlock().hash
        newBlock.hash = newBlock.computeHash()
        this.chain.push(newBlock)
    }


    checkChainvValidity() {
        for (let index = 1; index < this.chain.length; index++) {
            
            const currentBlock = this.chain[index]
            const prevBlock = this.chain[index-1]

            if (currentBlock.hash != currentBlock.computeHash ) {
               return false; 
            }
            
            if (prevBlock.hash != currentBlock.precedingHash) {
                return false;
            }
        }

        return true

    }

}


// creats a blockchain called andr3olli
// adds two blocks to this chain --> the "newBlock" param in addNewBlock
// refers to Block object

let andr3olli = new BlockChain();
andr3olli.addNewBlock(new Block(1, "01/06/2020", {sender: "Iris Ljesnjanin", recipient: "Cosima Mielke", quantity: 50}))
andr3olli.addNewBlock(new Block(2, "01/07/2020", {sender: "Vitaly Friedman", recipient: "Ricardo Gimenes", quantity: 100}))

// logs the chain in the console
console.log(JSON.stringify(andr3olli, null, 5))